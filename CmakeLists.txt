cmake_minimum_required(VERSION 3.15)
project(ToyBox LANGUAGES C CXX)

# Set default build type to Debug if not specified
if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Debug)
endif()

# Define the minimum required C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# External dependencies directory
set(EXTERNAL_DIR ${CMAKE_SOURCE_DIR}/external)

# ========================
# Add External Dependencies
# ========================

# Add AllocX (CMake-based dependency)
add_subdirectory(${EXTERNAL_DIR}/AllocX)

# Add Phyzzy (CMake-based dependency)
add_subdirectory(${EXTERNAL_DIR}/Phyzzy)

# Add EmberScript (Makefile-based dependency)
include(ExternalProject)
ExternalProject_Add(
    EmberScript
    SOURCE_DIR ${EXTERNAL_DIR}/EmberScript
    BUILD_IN_SOURCE 1
    CONFIGURE_COMMAND "" # Skip configure step
    BUILD_COMMAND make
    INSTALL_COMMAND "" # No install step needed
    BUILD_BYPRODUCTS ${EXTERNAL_DIR}/EmberScript/build/libEmberScript.a # Declare expected output
)

# Create an imported library for EmberScript
add_library(EmberScriptLib STATIC IMPORTED)
set_target_properties(EmberScriptLib PROPERTIES
    IMPORTED_LOCATION ${EXTERNAL_DIR}/EmberScript/build/libEmberScript.a
)

# Ensure EmberScriptLib is built after EmberScript
add_dependencies(EmberScriptLib EmberScript)

# Include EmberScript headers globally
include_directories(${EXTERNAL_DIR}/EmberScript/include)

# Add SDL2 (CMake-based dependency)
include(ExternalProject)
ExternalProject_Add(
    SDL2
    SOURCE_DIR ${EXTERNAL_DIR}/SDL2
    BINARY_DIR ${EXTERNAL_DIR}/SDL2/build
    CMAKE_ARGS
        -DCMAKE_INSTALL_PREFIX=${EXTERNAL_DIR}/SDL2/install
        -DSDL_STATIC=ON
        -DSDL_TEST=OFF
    BUILD_COMMAND ${CMAKE_COMMAND} --build .
    INSTALL_COMMAND ${CMAKE_COMMAND} --install .
    BUILD_BYPRODUCTS ${EXTERNAL_DIR}/SDL2/install/lib/libSDL2.a # Adjust based on your platform
)

# Create an imported library for SDL2
add_library(SDL2Lib STATIC IMPORTED)
set_target_properties(SDL2Lib PROPERTIES
    IMPORTED_LOCATION ${EXTERNAL_DIR}/SDL2/install/lib/libSDL2.a # Adjust based on platform
)

# Include SDL2 headers globally
include_directories(${EXTERNAL_DIR}/SDL2/install/include/SDL3)


# Ensure SDL2Lib is built after SDL2
add_dependencies(SDL2Lib SDL2)

# Add Google Test as a submodule
add_subdirectory(${EXTERNAL_DIR}/googletest)

# ========================
# External Libraries to Link
# ========================
set(EXTERNAL_LIBS AllocX PhyzzyLib EmberScriptLib SDL2Lib)

# ========================
# Add Engine Modules
# ========================
add_subdirectory(engine/ecs)
add_subdirectory(engine/memory)
add_subdirectory(engine/physics)
add_subdirectory(engine/rendering)
add_subdirectory(engine/scene)
add_subdirectory(engine/scripting)
add_subdirectory(engine/ui)
add_subdirectory(engine/utils)

# ========================
# Global ToyBoxEngine Library
# ========================
add_library(ToyBoxEngine INTERFACE)
target_link_libraries(ToyBoxEngine INTERFACE ${EXTERNAL_LIBS})

# Include external dependencies in ToyBoxEngine
target_include_directories(ToyBoxEngine INTERFACE
    ${EXTERNAL_DIR}/Phyzzy/include
    ${EXTERNAL_DIR}/AllocX/include
    ${EXTERNAL_DIR}/SDL2/install/include/SDL3
)

# Add dependency between ToyBoxEngine and external libraries
add_dependencies(ToyBoxEngine PhyzzyLib EmberScriptLib SDL2Lib)

# ========================
# Add ToyBox Executable
# ========================
add_executable(ToyBoxApp main.cpp)

# Link the ToyBoxEngine library to the executable
target_link_libraries(ToyBoxApp PRIVATE ToyBoxEngine)
target_include_directories(ToyBoxApp PRIVATE
    ${EXTERNAL_DIR}/Phyzzy/include
    ${EXTERNAL_DIR}/AllocX/include
    ${EXTERNAL_DIR}/SDL2/install/include/SDL3
)

# ========================
# Add Testing Support
# ========================
enable_testing()

# ========================
# Test Subdirectories
# ========================
# Assume the test subdirectories have their own CMakeLists.txt files.
add_subdirectory(tests/dynamicstring)
add_subdirectory(tests/hashmap)
add_subdirectory(tests/dynamicarray)
